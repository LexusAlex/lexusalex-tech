https://github.com/docker/compose/releases
https://github.com/docker/cli/tags
https://github.com/ansible/ansible/releases

docker compose run --rm backend-php-cli composer u

https://github.com/composer/composer/releases
https://github.com/php/php-src/tags
https://github.com/nginx/nginx/tags
https://github.com/postgres/postgres/tags

пакеты
docker compose run --rm backend-php-cli composer require laminas/laminas-config-aggregator php-di/php-di ramsey/uuid robmorgan/phinx slim/psr7 slim/slim
docker compose run --rm backend-php-cli composer require phpunit/phpunit --dev
docker compose run --rm backend-php-cli composer require webmozart/assert
docker compose run --rm backend-php-cli composer require --dev friendsofphp/php-cs-fixer
docker compose run --rm backend-php-cli composer require doctrine/dbal
https://github.com/php-casbin/php-casbin

docker compose run --rm backend-php-cli composer require monolog/monolog

Все пакеты для анализа
docker compose run --rm backend-php-cli composer outdated -a

Аутентификация

пакет lcobucci/jwt
docker compose run --rm backend-php-cli composer require league/oauth2-server

Для проверки dbal
 $conn = $container->get(\Doctrine\DBAL\Connection::class);
 $platform = $conn->getDatabasePlatform();
 echo "<pre>";
 $result = $conn->query("SELECT * FROM VERSION();");

 print_r($result->fetchAssociative());

Что сделать при деплое
поставить 777 backend/var/log/
chmod ugo+r jwt_private.key
// Аутентификация в next
https://www.youtube.com/watch?v=GgG3mi4Iqhw

Функциональные тесты запускать только в dev режиме
Как можно сделать фикстуры
protected function setUp(): void
    {
        parent::setUp();

        /** @var ContainerInterface $container */
        $container = $this->application()->getContainer();
        /** @var Connection $connection */
        $connection = $container->get(Connection::class);
        /** @var RequestFixture $fixture */
        $fixture = $container->get(RequestFixture::class);
        $results = $fixture->load();
        foreach ($results as $result) {
            $connection->createQueryBuilder()
                ->insert('authentication_users')
                ->values(
                    [
                        'id' => ':id',
                        'email' => ':email',
                    ]
                )
                ->setParameter('id', $result['id'])
                ->setParameter('email', $result['email'])
                ->executeQuery();
        }
    }

    protected function tearDown(): void
    {
        parent::tearDown();
        /** @var ContainerInterface $container */
        $container = $this->application()->getContainer();
        /** @var Connection $connection */
        $connection = $container->get(Connection::class);
        $connection->createQueryBuilder()->delete('authentication_users')
            ->where('id = ?')
            ->setParameter(0, '018d980e-c8f8-7015-ba0f-a3edff3243df')
            ->executeQuery();

    }

1. Накатывание общих фикстур
2. Очистка
3. Накатка фикстур для каждого теста
4. Восстановление фикстур после запуска тестов

npm install -D jest jest-environment-jsdom @testing-library/react @testing-library/jest-dom
https://www.youtube.com/watch?v=sjdMBJ72M4s
https://deworker.pro/edu/series/interactive-site/e2e-tests

$this->logger->error($this->exception->getMessage(), ['exception' => $this->exception, 'url' => (string) $this->request->getUri(), 'ip' => isset($this->request->getServerParams()['REMOTE_ADDR']) ? $this->request->getServerParams()['REMOTE_ADDR'] : null]);
$this->logger->error($this->exception->getMessage(), ['exception' => $this->exception, 'url' => $this->request->getUri(), 'ip' => isset($this->request->getServerParams()['REMOTE_ADDR']) ? $this->request->getServerParams()['REMOTE_ADDR'] : null]);

Разобраться как в переменных окружения хранить пароли

$twig = $container->get(\Twig\Environment::class);
echo $twig->render('authentication/joinByEmail/confirm.html.twig');

Запустить девелоперский проект на продакшене и запустить там тесты

Внедрить (пока не надо)
https://nextauth-nextjs13.vercel.app/
https://github.com/raiv200/NextAuth-Next.js-13

git add backend/ frontend/ .gitignore doc.txt docker-compose.yml Makefile README.md && git commit -m "fix doc" && git push origin && git push gitlab

Создание ключей
https://oauth2.thephpleague.com/installation/

Внешние модули могут получать информацию только из запросов
TODO переделать форму

ansible debug
---
- name: update apt cache
  ansible.builtin.apt:
    update_cache: yes
  register: apt_output
  debugger: on_failed
- name: Display apt output
  debug:
   var: apt_output

phpunit
docker compose run --rm backend-php-cli composer phpunit -- --filter testSetHeaderSuccess src/Http/Test/Middleware/Authenticate/AuthenticateTest.php

https://lucia-auth.com/guides/oauth/custom-providers
